번호.요청url
요청:
Get or POST
파라메터(name: 예시값)
응답:
응답JSON
예)
1. /user/signout
요청:
Get
Id: id
응답:
{
        signOutSuccess : true or false,
        msg : 로그아웃에 성공했습니다, 실패했습니다(오류내용).
}
-----------------------------------

1. /user/signin ✅
요청 : POST
id : id
pw : pw
응답 : 
{
        loginSuccess : true or false,
        nick : 닉네임,
        msg : 로그인에 성공했습니다. 비밀번호가 틀렸습니다 (비번틀렸을 시). 알 수 없는 이유로 로그인에 실패했습니다.(그 외 이유로 로그인 실패 시),
        cookie : jwt token 등등
        
}

2. /user/signout ✅
요청 : POST
{ id : id }
응답 : 
{
        signOutSuccess : true or false,
        msg : 로그아웃에 성공했습니다. 알 수 없는 이유로 실패했습니다.(그 외의 이유로 로그아웃 실패 시)
}

3. /user/signup ✅
요청 : POST
{
        id : id
        email : email
        pw : pw
        nick : nick 
        isPro : true or false // 전공자 이냐 아니냐
        major : major // 전공 명
}

응답 : 
{
        signUpSuccess : true or false,
        msg : 회원가입에 성공했습니다. 알 수 없는 이유로 실패했습니다.(그 외의 이유로 회원가입 실패 시)
}

4. /user/idcheck ✅
요청 : POST

{
        id : id
}

응답 : 
{
        idCheckSuccess : true or false,
        msg : 사용해도 좋습니다. 중복된 아이디가 존재합니다. 알 수 없는 이유로 실패했습니다.(그 외의 이유로 중복체크 실패 시)
}

5. /get/hashtag
요청 : GET
응답 : 
[
        {name : "해시태그 명"},
        {name : "해시태그 명"}
]


6. /search
요청 : POST
{
        inputValue : inputValue
        hashTags : hashTags // Array
}

응답 : 
[
        {
                post_title : 글제목,
                post_uploader : 글쓴이,
                post_uploadtime : 업로드 시간,
                post_detail : 내용,
                post_view : 조회수,
                post_like : 추천수
        },
        {
                ...
        }
        ...
]

7. /get/mainqna
설명 : 최신 QnA 글 구하기
요청 : GET
응답 : 
[
        {
                title : 제목,
                tag : [] 태그배열,
                id : 글쓴사람 아이디,
                nick : 글쓴사람 닉네임,
                context : 글 내용,
                views : 조회수,
                date : 글쓴 날짜,
                index : 고유인덱스번호
        },
        ...
] 

8. /get/maingongji
설명 : 최신순 공지사항 글 구하기
요청 : GET
응답 : 
[
        {
                title : 제목,
                tag : [] 태그배열,
                id : 글쓴사람 아이디,
                nick : 글쓴사람 닉네임,
                context : 글 내용,
                views : 조회수,
                date : 글쓴 날짜,
                index : 고유인덱스번호
        },
        ...
]

9. /get/mainviewdec
설명 : QnA 글 조회수 내림차순으로
요청 : GET
응답 : 
[
        {
                title : 제목,
                views : 조회수,
                date : 글쓴 날짜
        },
        ...
]

10. /get/hashtagrank
설명 : 해쉬태그 순위 내림차순으로 10개만
요청 : GET
응답 : 
["# 컴퓨터 공학과", "# C언어",...]

11. /qna/post
설명 : qna글 추가
요청 : POST
{
        title : 해당 글제목,
        tag : 해당 글 태그 배열,
        context : 해당 글 내용,
        id : 글쓴사람 아이디,
}
응답 : 
msg : "글이 저장되었습니다" or "오류로 인해 저장에 실패했습니다."


12. /notice/post
설명 : 공지사항 글 추가
요청 : POST
{
        title : 해당 글제목,
        context : 해당 글 내용,
        id : 글쓴사람 아이디,
}
응답 : 
msg : "글이 저장되었습니다" or "오류로 인해 저장에 실패했습니다."

13. /qna/update
설명 : qna글 업데이트
요청 : POST
{
        title : 해당 글제목,
        tag : 해당 글 태그 배열,
        context : 해당 글 내용,
        id : 글쓴사람 아이디,
        index : 글 고유 인덱스번호
}
응답 : 
msg : "글이 수정되었습니다" or "오류로 인해 수정에 실패했습니다."

14. /notice/update
설명 : 공지사항글 업데이트
요청 : POST
{
        title : 해당 글제목,
        context : 해당 글 내용,
        id : 글쓴사람 아이디,
        index : 글 고유 인덱스번호
}
응답 : 
msg : "글이 수정되었습니다" or "오류로 인해 수정에 실패했습니다."